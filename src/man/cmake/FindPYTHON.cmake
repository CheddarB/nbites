
##
# Clear variables/caches
##

SET( PYTHON_DEFINITIONS "" )
SET( PYTHON_INCLUDE_DIR "PYTHON_INCLUDE_DIR-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)
SET( PYTHON_LIBRARIES "PYTHON_LIBRARIES-NOTFOUND" CACHE FILEPATH "Cleared." FORCE)


##
# Defined package variable
##
#SET(OE_CROSS_BUILD "ON")
IF( OE_CROSS_BUILD )
  MESSAGE( STATUS "OE_SYSROOT: ${OE_SYSROOT}" )
  SET( PYTHON_INCLUDE_DIR ${OE_SYSROOT}/usr/include/python2.6 )
  SET( PYTHON_LIBRARIES ${OE_SYSROOT}/usr/lib//libpython2.6.so )
ELSE( OE_CROSS_BUILD )
  IF( WIN32 )
    GET_FILENAME_COMPONENT(PYTHON_INSTALL_DIR 
        [HKEY_LOCAL_MACHINE\\SOFTWARE\\Python\\PythonCore\\2.6\\InstallPath;] ABSOLUTE CACHE)
    SET( PYTHON_INCLUDE_DIR ${PYTHON_INSTALL_DIR}/include )
    SET( PYTHON_LIBRARIES C:/Windows/SysWOW64/python26.dll )
    IF( NOT PYTHON_LIBRARIES )
        SET( PYTHON_LIBRARIES C:/Windows/python26.dll )
    ENDIF( NOT PYTHON_LIBRARIES )
  ELSE( WIN32 )
    SET( PYTHON_INCLUDE_DIR /usr/include/python2.6 )
    IF ( APPLE )
      SET( PYTHON_LIBRARIES /usr/lib/libpython2.6.dylib )
    ELSE ( APPLE )
      SET( PYTHON_LIBRARIES /usr/lib/libpython2.6.so )
    ENDIF( APPLE )
  ENDIF( WIN32 )
ENDIF( OE_CROSS_BUILD )




IF( PYTHON_INCLUDE_DIR AND PYTHON_LIBRARIES )
  IF ( EXISTS PYTHON_INCLUDE_DIR AND EXISTS PYTHON_LIBRARIES )
    SET( PYTHON_FOUND TRUE )
  ENDIF ( EXISTS PYTHON_INCLUDE_DIR AND EXISTS PYTHON_LIBRARIES )
ENDIF( PYTHON_INCLUDE_DIR AND PYTHON_LIBRARIES )

IF( NOT PYTHON_FOUND AND PYTHON_FIND_REQUIRED )
  IF( NOT PYTHON_INCLUDE_DIR OR NOT EXISTS ${PYTHON_INCLUDE_DIR} )
    MESSAGE( STATUS "Required include not found" )
    MESSAGE( FATAL_ERROR "Could not find PYTHON include!" )
  ENDIF( NOT PYTHON_INCLUDE_DIR OR NOT EXISTS ${PYTHON_INCLUDE_DIR} )
  IF( NOT PYTHON_LIBRARIES OR NOT EXISTS ${PYTHON_LIBRARIES} )
    MESSAGE( STATUS "Required libraries not found" )
    MESSAGE( FATAL_ERROR "Could not find PYTHON libraries!" )
  ENDIF( NOT PYTHON_LIBRARIES OR NOT EXISTS ${PYTHON_LIBRARIES} )
ENDIF( NOT PYTHON_FOUND AND PYTHON_FIND_REQUIRED )

# Finally, display informations if not in quiet mode
IF( NOT PYTHON_FIND_QUIETLY )
  MESSAGE( STATUS "PYTHON found " )
  MESSAGE( STATUS "  includes   : ${PYTHON_INCLUDE_DIR}" )
  MESSAGE( STATUS "  libraries  : ${PYTHON_LIBRARIES}" )
  MESSAGE( STATUS "  definitions: ${PYTHON_DEFINITIONS}" )
ENDIF( NOT PYTHON_FIND_QUIETLY )



MARK_AS_ADVANCED(
  PYTHON_INSTALL_DIR
  PYTHON_DEFINITIONS
  PYTHON_INCLUDE_DIR
  PYTHON_LIBRARIES
)
